package application;

import java.net.URL;
import java.util.ResourceBundle;

import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.fxml.FXML;
import javafx.fxml.Initializable;
import javafx.scene.control.Button;
import javafx.scene.control.TableColumn;
import javafx.scene.control.TableView;
import javafx.scene.control.TableColumn.CellEditEvent;
import javafx.scene.control.cell.TextFieldTableCell;
import javafx.util.converter.NumberStringConverter;

public class EmployeeController implements Initializable{
		// Buttons
		@FXML
		private Button btnAddLine;
		@FXML
		private Button btnSubmit;
		@FXML
		private Button btnRemoveLine;
		
		@FXML
		private TableView<EmployeeModel> tblEmployee;
		@FXML
		private TableColumn<EmployeeModel, Number> colEmployeeID;
		@FXML
		private TableColumn<EmployeeModel, String> colEmployeeFirst;
		@FXML
		private TableColumn<EmployeeModel, String> colEmployeeLast;
		@FXML
		private TableColumn<EmployeeModel, Number> colPhoneNumber;
		
		
		@Override
		public void initialize(URL arg0, ResourceBundle arg1) {
			tblEmployee.setEditable(true);
			
			// Make columns editable, and save edits when they are made
			colEmployeeID.setEditable(true);
			colEmployeeID.setCellFactory(TextFieldTableCell.forTableColumn(new NumberStringConverter()));
			colEmployeeID.setOnEditCommit(new EventHandler<CellEditEvent<EmployeeModel, Number>>(){
				
				@Override
				public void handle(CellEditEvent<EmployeeModel, Number> event ) {
					EmployeeModel employee = event.getRowValue();
					employee.setEmpID(event.getNewValue().intValue());
				}
			});
			
			colEmployeeFirst.setEditable(true);
			colEmployeeFirst.setCellFactory(TextFieldTableCell.forTableColumn());
			colEmployeeFirst.setOnEditCommit(new EventHandler<CellEditEvent<EmployeeModel, String>>(){
				
				@Override
				public void handle(CellEditEvent<EmployeeModel, String> event ) {
					EmployeeModel employee = event.getRowValue();
					employee.setfName(event.getNewValue());
				}
			});
			
			colEmployeeLast.setEditable(true);
			colEmployeeLast.setCellFactory(TextFieldTableCell.forTableColumn());
			colEmployeeLast.setOnEditCommit(new EventHandler<CellEditEvent<EmployeeModel, String>>(){
				
				@Override
				public void handle(CellEditEvent<EmployeeModel, String> event ) {
					EmployeeModel employee = event.getRowValue();
					employee.setlName(event.getNewValue());
				}
			});
			
			colPhoneNumber.setEditable(true);
			colPhoneNumber.setCellFactory(TextFieldTableCell.forTableColumn(new NumberStringConverter()));
			colPhoneNumber.setOnEditCommit(new EventHandler<CellEditEvent<EmployeeModel, Number>>(){
				
				@Override
				public void handle(CellEditEvent<EmployeeModel, Number> event ) {
					EmployeeModel employee = event.getRowValue();
					employee.setPhone(event.getNewValue().longValue());
				}
			});
		}
		
		public void btnAddLineClick(ActionEvent event) {
			EmployeeModel newline = new EmployeeModel(null, null, null, null);
			tblEmployee.getItems().add(newline);
		}
		
		public void btnRemoveLineClick(ActionEvent event) {
			tblEmployee.getItems().removeAll(tblEmployee.getSelectionModel().getSelectedItem());
		}
		
		public void btnSubmitInvoiceClick(ActionEvent event) {
			
		}
}
